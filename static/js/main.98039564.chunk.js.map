{"version":3,"sources":["redux/initialState.js","redux/reducer.js","redux/constants.js","redux/store.js","redux/actions.js","components/header/index.js","components/header/header.jsx","db-text/index.js","db-text/db-text.js","components/content/index.js","components/content/content.jsx","components/app/index.js","components/app/app.jsx","index.js"],"names":["initialStateNav","navItem","title","active","section","id","menu","activeUnderMenu","undermenu","navReducer","state","action","type","map","el","body","underel","key","store","createStore","applyMiddleware","thunk","UpdateNav","UpdateUnderNav","FalseUnderNav","FalseNav","Header","useSelector","dispatch","useDispatch","buttGroup","item","Nav","Item","Button","className","onClick","obj","actions","aria-controls","Collapse","in","Row","Col","sm","md","lg","xl","Dropdown","Divider","menuId","aria-expanded","ListGroup","variant","li","href","Navbar","bg","expand","Brand","Toggle","dbText","text","Content","Container","App","ReactDOM","render","bind","document","getElementById"],"mappings":"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","file":"static/js/main.98039564.chunk.js","sourcesContent":["const initialStateNav = {\n  navItem: [\n    {\n      title: 'Peoples',\n      active: false,\n      section: 'section1',\n      id: 0,\n      menu: [\n        {\n          title: 'челове́к разу́мный',\n          activeUnderMenu: false,\n          undermenu: [\n            'Эвангелос Кациулис — IQ 198-205',\n            'Ким Унг-Йонг — IQ 210',\n            'Кристофер Хирата — IQ 225',\n            'Мэрилин Вос Савант — IQ 228',\n            'Теренс Тао — IQ 230',\n          ],\n        },\n        {\n          title: 'челове́к красивый',\n          activeUnderMenu: false,\n          undermenu: [\n            'Кэтрин Элизабет Мидлтон',\n            'Кристина Хендрикс',\n            'Щарлиз Терон',\n            'Сальма Хайек',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'Animals',\n      active: false,\n      section: 'section2',\n      id: 1,\n      menu: [\n        {\n          title: 'хордовые',\n          activeUnderMenu: false,\n          undermenu: [\n            'Зебра',\n            'Летучая мышь',\n            'Ящерица',\n            'Лягушка',\n            'Мартышка',\n          ],\n        },\n        {\n          title: 'иглокожие',\n          activeUnderMenu: false,\n          undermenu: [\n            'Морская звезда',\n            'Морские лилии',\n            'Морские огурцы',\n            'Морские ежи',\n          ],\n        },\n        {\n          title: 'моллюски',\n          activeUnderMenu: false,\n          undermenu: ['Улитка', 'Прудовик', 'Осьминог', 'Кальмар', 'Устрица'],\n        },\n        {\n          title: 'членистоногие',\n          activeUnderMenu: false,\n          undermenu: ['Паук', 'Муха', 'Рак', 'Краб', 'Бабочка'],\n        },\n        {\n          title: 'губки',\n          activeUnderMenu: false,\n          undermenu: ['Kovax', 'Амфей', 'Фарматэкс', 'Дагмар', 'Элемент 2.5'],\n        },\n      ],\n    },\n    {\n      title: 'Cities',\n      active: false,\n      section: 'section3',\n      id: 2,\n      menu: [\n        {\n          title: 'промышленные',\n          activeUnderMenu: false,\n          undermenu: [\n            'Детройт, США',\n            'Магнитогорск, Россия',\n            'Днепропетровск, Украина',\n            'Шеффилд, Великобритания',\n            'Бохум-Германия',\n          ],\n        },\n        {\n          title: 'курортные',\n          activeUnderMenu: false,\n          undermenu: [\n            'Атолл Адду, Мальдивы',\n            'Рио-де-Жанейро, Бразилия',\n            'Тенерифе, Канарские острова',\n            'Палм-Бич, США',\n            'Минск, Беларусь',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'Flowers',\n      active: false,\n      section: 'section4',\n      id: 3,\n      menu: [\n        {\n          title: 'красивые',\n          activeUnderMenu: false,\n          undermenu: [\n            'Plumeria',\n            'Orchids',\n            'Sunflower',\n            'Lilies',\n            'Daffodils',\n          ],\n        },\n        {\n          title: 'некрасивые',\n          activeUnderMenu: false,\n          undermenu: [\n            'Pseudocolus fusiformis',\n            'Welwitschia mirabilis',\n            'Pachypodium namaquanum',\n            'Nepenthes',\n            'Bowiea volubilis',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'Mushrooms',\n      active: false,\n      section: 'section5',\n      id: 4,\n      menu: [\n        {\n          title: 'съедобные',\n          activeUnderMenu: false,\n          undermenu: [\n            'Боровик',\n            'Сыроежка',\n            'Лисичка',\n            'Опята',\n            'Волнуша',\n            'ChocoBoy',\n          ],\n        },\n        {\n          title: 'несъедобные',\n          activeUnderMenu: false,\n          undermenu: ['Мухомор', 'Поганка', 'Сатанинский гриб', 'Свинушка'],\n        },\n      ],\n    },\n  ],\n}\nexport default initialStateNav\n","import * as constants from './constants'\nimport initialStateNav from './initialState'\n\nconst navReducer = (state = initialStateNav, action) => {\n  switch (action.type) {\n    case constants.TOGGLE_MENU:\n      return {\n        ...state,\n        navItem: state.navItem.map((el) =>\n          el.id === action.body.id ? action.body : el\n        ),\n      }\n    case constants.TOGGLE_UNDER_MENU:\n      return {\n        ...state,\n        navItem: state.navItem.map((el) =>\n          el.id === action.id\n            ? {\n                ...state.navItem[el.id],\n                menu: state.navItem[el.id].menu.map((underel) =>\n                  underel.title === action.body.title ? action.body : underel\n                ),\n              }\n            : el\n        ),\n      }\n    case constants.SWITCH_FALSE_UNDER_NAV:\n      return {\n        ...state,\n        navItem: state.navItem.map((el, key) => {\n          return {\n            ...state.navItem[key],\n            menu: state.navItem[key].menu.map((underel) => {\n              return { ...underel, activeUnderMenu: false }\n            }),\n          }\n        }),\n      }\n    case constants.SWITCH_FALSE_NAV:\n      return { ...initialStateNav }\n    default:\n      return state\n  }\n}\n\nexport default navReducer \n","const TOGGLE_MENU = 'TOGGLE_MENU'\nconst SWITCH_FALSE_NAV = 'SWITCH_FALSE_NAV'\nconst TOGGLE_UNDER_MENU = 'TOGGLE_UNDER_MENU'\nconst SWITCH_FALSE_UNDER_NAV = 'SWITCH_FALSE_UNDER_NAV'\n\nexport {\n  TOGGLE_MENU,\n  SWITCH_FALSE_NAV,\n  TOGGLE_UNDER_MENU,\n  SWITCH_FALSE_UNDER_NAV\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport navReducer from './reducer'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(navReducer, applyMiddleware(thunk))\n\nexport default store","import {\n  TOGGLE_MENU,\n  SWITCH_FALSE_NAV,\n  TOGGLE_UNDER_MENU,\n  SWITCH_FALSE_UNDER_NAV,\n} from './constants'\n\nexport const OpenMenu = (item) => {\n  const obj = {\n    ...item,\n    active: !item.active,\n  }\n  return (dispatch) => {\n    dispatch(FalseNav())\n    dispatch(UpdateNav(obj))\n  }\n}\nexport const OpenUnderMenu = (item, menuId) => {\n  const obj = {\n    ...item,\n    activeUnderMenu: !item.activeUnderMenu,\n  }\n  return (dispatch) => {\n    dispatch(FalseUnderNav())\n    dispatch(UpdateUnderNav(obj, menuId))\n  }\n}\nexport const UpdateNav = (body) => ({\n  type: TOGGLE_MENU,\n  body,\n})\nexport const UpdateUnderNav = (body, id) => ({\n  type: TOGGLE_UNDER_MENU,\n  body,\n  id,\n})\nexport const FalseUnderNav = () => ({\n  type: SWITCH_FALSE_UNDER_NAV,\n})\nexport const FalseNav = () => ({\n  type: SWITCH_FALSE_NAV,\n})\n","import Header from './header.jsx'\nexport default Header","import React, { Fragment } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './header.css'\nimport {\n  Button,\n  Collapse,\n  Nav,\n  Navbar,\n  Row,\n  Dropdown,\n  Col,\n  ListGroup,\n} from 'react-bootstrap'\nimport * as actions from '../../redux/actions'\n\nconst Header = () => {\n  const navItem = useSelector((state) => state.navItem)\n  const dispatch = useDispatch()\n\n  const buttGroup = navItem.map((item, key) => {\n    const { title, active } = item\n    return (\n      <Fragment key={key}>\n        <Nav.Item>\n          <Button\n            active={active}\n            className=\"btn-style\"\n            onClick={() => dispatch(actions.OpenMenu(item))}\n            aria-controls=\"menu\"\n          >\n            {title}\n          </Button>\n        </Nav.Item>\n        <Collapse in={item.active} id=\"menu\" key={key}>\n          <Row className=\"text-center\">\n            {item.menu.map((title, key) => {\n              return (\n                <Col sm={12} md={6} lg xl key={key}>\n                  <Dropdown.Divider />\n\n                  <Button\n                    className=\"btn-style\"\n                    onClick={() =>\n                      dispatch(actions.OpenUnderMenu(title, item.id))\n                    }\n                    aria-controls=\"example-collapse-text\"\n                    aria-expanded={title.activeUnderMenu}\n                  >\n                    {title.title}\n                  </Button>\n\n                  <Dropdown.Divider />\n                  <Collapse in={title.activeUnderMenu}>\n                    <ListGroup variant=\"flush\" className=\"my-2\">\n                      {title.undermenu.map((li, key) => {\n                        return (\n                          <ListGroup.Item className=\"text-left\" key={key}>\n                            <a\n                              href={`#${item.section}`}\n                              onClick={() => dispatch(actions.FalseUnderNav())}\n                            >\n                              {li}\n                            </a>\n                          </ListGroup.Item>\n                        )\n                      })}\n                    </ListGroup>\n                  </Collapse>\n                </Col>\n              )\n            })}\n          </Row>\n        </Collapse>\n      </Fragment>\n    )\n  })\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg sm\">\n        <Navbar.Brand href=\"https://github.com/AntonZubritski\">\n          Anton Zubritski\n          <Dropdown.Divider />\n        </Navbar.Brand>\n      </Navbar>\n\n      <Navbar bg=\"light\" expand=\"lg\" className=\"sticky-top\">\n        <Navbar.Toggle\n          aria-controls=\"basic-navbar-nav\"\n          onClick={() => dispatch(actions.FalseNav())}\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">{buttGroup}</Navbar.Collapse>\n      </Navbar>\n    </>\n  )\n}\nexport default Header","import dbText from './db-text'\nexport default dbText","const dbText = [\n  {\n    title: 'Peoples',\n    id: 'section1',\n    text: `Люди[1] (лат. Homo) — род семейства гоминидов отряда приматов.Включает\n      вид человек разумный (Homo sapiens) и близкие\n      ему вымершие виды. Предками Homo, вероятно,\n      являются австралопитеки[2].Иногда этот род рассматривают\n      как непрерывную фратрию, то есть разномастную совокупность популяций,\n      которые обмениваются генными потоками в течение долгого периода времени,\n      и поэтому не образуют репродуктивные барьеры, сохраняя принадлежность к\n      одному виду. При этом популяции эти по направленности адаптаций и скорости\n      эволюции очень разнородны. В то же время, в прошлом, человечество, возможно,\n      состояло из нескольких видов, в частности неандертальцев считают видом, отдельным\n      от кроманьонцев.Некоторые учёные (например, профессор Моррис Гудмэн, руководитель\n      исследований ДНК шимпанзе при университете Уэйна в Детройте) полагают, что,\n      согласно данным генетического анализа, к роду Homo следует причислять также\n      обыкновенного шимпанзе и бонобо (Homo troglodytes и Homo paniscus соответственно).`,\n  },\n  {\n    title: 'Animals',\n    id: 'section2',\n    text: `Живо́тные (лат. Animalia) — традиционно (со времён Аристотеля) выделяемая категория\n      организмов, в настоящее время рассматривается в качестве биологического царства. Животные\n      являются основным объектом изучения зоологии.\n\n      Животные относятся к эукариотам (в клетках имеются ядра). Классическими признаками\n      животных считаются: гетеротрофность (питание готовыми органическими соединениями)\n      и способность активно передвигаться. Впрочем, существует немало животных, ведущих\n      неподвижный образ жизни, а гетеротрофность свойственна грибам и некоторым растениям-паразитам.\n      \n      Русское слово «животное» образовано от «живот», в прошлом означавшего «жизнь,\n      имущество». В быту под терминами «дикие животные», «домашние животные» часто\n      понимаются только млекопитающие или четвероногие наземные позвоночные (млекопитающие,\n      пресмыкающиеся и земноводные). Однако в науке за термином «животные» закреплено более\n      широкое значение, соответствующее латинскому Animalia (см. выше). В научном смысле к\n      животным, помимо млекопитающих, пресмыкающихся и земноводных, относится огромное\n      множество других организмов: рыбы, птицы, насекомые, паукообразные, моллюски, морские\n      звёзды, черви и другие.`,\n  },\n  {\n    title: 'Cities',\n    id: 'section3',\n    text: `Го́род — крупный населённый пункт, жители которого заняты, как правило, не сельским\n      хозяйством. Имеет развитый комплекс хозяйства и экономики. Является скоплением архитектурных\n      и инженерных сооружений, обеспечивающих жизнедеятельность постоянного и временного населения города.\n\n      Исторически термин происходит от наличия вокруг поселения оборонительной ограды — вала или стены.\n      В Древней Руси городом называлось всякое крупное жилое место, окружённое такой оградой. Города служили\n      центром развития искусства и ремёсел, технических достижений.\n      \n      Разрастаясь, города образуют городские агломерации. Особенно важную роль для стран и континентов\n      играют столицы, а также города-миллионеры или агломерации-миллионеры[en] (имеющие численность населения\n      более 1 миллиона человек), в том числе мегалополисы и глобальные города.\n      \n      Изучением правильного устройства города занимается специальная дисциплина — градостроительство,\n      которая изучает законы и правила устройства городов. Градостроительство родилось в недрах\n      архитектуры, но со временем города стали большими, и для их планирования стали нужны дополнительные\n      знания — о гигиене, экономике, экологии, транспорте и многом другом[1].`,\n  },\n  {\n    title: 'Flowers',\n    id: 'section4',\n    text: `Основные виды цветочных культур применяемых в наших с вами садах.\n\n      Все цветочные культуры открытого грунта можно разделить на:\n      \n      Однолетники. К однолетним относятся растения, достигающие декоративности\n      и дающие вызревшие семена в течение одного сезона (тагетис, алиссум, агератум и т.д.).\n      Летники широко используются в декоративном садоводстве, однако более распространены они\n      в городском озеленении. Несмотря на то, что летники очень хороши для создания больших\n      ковровых и партерных цветников, в частном садоводстве их используют редко.\n      \n      Большинство летников неприхотливы и хорошо растут в средней полосе.\n      Летники с коротким периодом цветения (амарант, мак) сеют ранней весной\n      прямо в грунт на подготовленные рабатки, клумбы рядовым способом или гнездами,\n      не загущая. Всходы в фазе 2-4-х настоящих листьев прореживают, соблюдая постоянное\n      расстояние между растениями. Летники с более длительным периодом развития выращивают\n      рассадным способом. Эти варианты подходят для садоводов любителей, проще конечно\n      купить готовую рассаду в питомнике.`,\n  },\n  {\n    title: 'Mushrooms',\n    id: 'section5',\n    text: `Грибы́ (лат. Fungi или Mycota) — царство живой природы, объединяющее эукариотические\n      организмы, сочетающие в себе некоторые признаки как растений, так и животных. Грибы изучает\n      наука микология, которая считается разделом ботаники, поскольку ранее грибы относили к царству растений.\n\n      Понятие о грибах как об отдельном царстве сформировалось в науке к 1970-м годам, хотя выделить\n      это царство предлагал ещё Э. Фрис в 1831 году, а Карл Линней высказывал сомнения, размещая грибы\n      в царстве растений в своей «Системе природы». Во второй половине XX века окончательно сформировалось\n      и представление о полифилетизме грибов. К концу XX века были накоплены данные по генетике, цитологии\n    и биохимии, позволившие разделить эту группу организмов на несколько не родственных между собой ветвей и\n    распределить их между различными царствами, оставив в царстве «настоящих», или собственно грибов, только \n    одну из них. Таким образом, к началу XXI века научный термин «грибы» стал неоднозначным[1].`,\n  },\n]\nexport default dbText\n","import Content from './content.jsx'\nexport default Content","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport ScrollableAnchor from 'react-scrollable-anchor'\nimport dbText from '../../db-text'\nimport './content.css'\n\nconst Content = () => {\n  return (\n    <>\n      {dbText.map((item, key) => {\n        return (\n          <ScrollableAnchor id={item.id} key={`${key}_${item.text}`}>\n            <Container className=\"vh-85 w-auto\">\n              <div className=\"h-100 pt-9 justify-content-end d-flex flex-column\">\n                <h2>{item.title}</h2>\n                {item.text}\n              </div>\n            </Container>\n          </ScrollableAnchor>\n        )\n      })}\n    </>\n  )\n}\nexport default Content\n","import App from './app.jsx'\r\nexport default App","import React from 'react'\r\nimport Header from '../header'\r\nimport Content from '../content'\r\nimport './app.css'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Content />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport store from './redux/store'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './components/app'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App dispatch={store.dispatch.bind(store)} />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}